{"version":3,"sources":["components/MovieCard.js","views/MovieDetailsPageView.js","redux/movie-selectors.js","servises/api.js","redux/movie-operations.js","images/defaultPosterImg.jpg","components/Button.js","components/Modal.js"],"names":["useStyles","createUseStyles","thumb","display","width","padding","marginLeft","marginRight","border","text","color","imgContainer","img","genreList","listStyle","overview","MovieCard","movie","classes","useState","showModal","setShowModal","src","poster_path","defaultImage","toggleModal","className","onClick","alt","title","vote_average","genres","length","map","id","name","Modal","onClose","CastView","lazy","ReviewsView","container","textAlign","minHeight","links","justifyContent","link","activeLink","btns","marginTop","btn","MovieDetailsPage","movieId","useParams","useRouteMatch","url","path","history","useHistory","location","useLocation","dispatch","useDispatch","useSelector","getMovieById","isLoading","getLoading","scrollToBottom","scroll","onBtnClick","push","state","from","useEffect","fetchMovieById","fetchMovieByIdSuccess","Button","type","height","to","pathname","activeClassName","fallback","success","scrollToTop","loading","getActors","movieCastById","getPopularMovies","popularMovies","movieById","getMovieReviewsById","movieReviewsById","getSearchValue","searchValue","getNotFoundState","notFound","API_KEY","BASE_URL","API","fetchPopularMovies","fetch","then","r","json","fetchMovieByName","movieName","fetchMovieCastById","fetchMovieReviewsById","a","fetchPopularMoviesRequest","data","fetchPopularMoviesSuccess","results","fetchPopularMoviesError","fetchMovieByIdRequest","fetchMovieByIdError","fetchMovieByNameRequest","notFoundPageAction","fetchMovieByNameSuccess","error","fetchMovieByNameError","fetchMovieCastByIdRequest","cast","fetchMovieCastByIdSuccess","fetchMovieCastByIdError","fetchMovieReviewsByIdRequest","fetchMovieReviewsByIdSuccess","fetchMovieReviewsByIdError","backgroundColor","borderColor","borderRadius","minWidth","paddingLeft","paddingRight","children","overlay","position","top","left","alignItems","zIndex","content","maxWidth","maxHeight","e","target","currentTarget"],"mappings":"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","file":"static/js/movieDetailsPage-view.f72197b4.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport Modal from './Modal';\r\nimport defaultImage from '../images/defaultPosterImg.jpg';\r\nconst useStyles = createUseStyles({\r\n  thumb: {\r\n    display: 'flex',\r\n    width: 650,\r\n    padding: 15,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    border: '2px solid white',\r\n  },\r\n  text: {\r\n    color: 'white',\r\n  },\r\n  imgContainer: {\r\n    padding: 15,\r\n  },\r\n  img: {\r\n    border: '2px solid white',\r\n  },\r\n  genreList: {\r\n    listStyle: 'none',\r\n    padding: 0,\r\n  },\r\n  overview: {\r\n    width: 300,\r\n  },\r\n});\r\n\r\nexport default function MovieCard({ movie }) {\r\n  const classes = useStyles();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const src = movie.poster_path\r\n    ? `https://image.tmdb.org/t/p/w400${movie.poster_path}`\r\n    : defaultImage;\r\n  const toggleModal = () => {\r\n    return setShowModal(!showModal);\r\n  };\r\n  return (\r\n    <>\r\n      <div className={classes.thumb}>\r\n        <div className={classes.imgContainer}>\r\n          <img\r\n            onClick={toggleModal}\r\n            className={classes.img}\r\n            src={src}\r\n            alt={movie.title}\r\n            width=\"300px\"\r\n          />\r\n        </div>\r\n        <div className={classes.text}>\r\n          <h2>{movie.title}</h2>\r\n          <p>\r\n            User Score:{' '}\r\n            {movie.vote_average\r\n              ? `${movie.vote_average * 10}%`\r\n              : 'Sorry, not found'}\r\n          </p>\r\n          <h3>Overview:</h3>\r\n          <p className={classes.overview}>{movie.overview}</p>\r\n          <h4>Genres:</h4>\r\n          <ul className={classes.genreList}>\r\n            {movie?.genres.length > 10 ? (\r\n              movie.genres.map(({ id, name }) => <li key={id}>{name}</li>)\r\n            ) : (\r\n              <p>Sorry, genres not found</p>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      {showModal && <Modal onClose={toggleModal} src={src} alt={movie.title} />}\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, lazy, Suspense } from 'react';\r\nimport {\r\n  useParams,\r\n  NavLink,\r\n  Route,\r\n  useRouteMatch,\r\n  Switch,\r\n  useHistory,\r\n  useLocation,\r\n} from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createUseStyles } from 'react-jss';\r\nimport Button from '../components/Button';\r\nimport { fetchMovieById } from '../redux/movie-operations';\r\nimport { fetchMovieByIdSuccess } from '../redux/movie-actions';\r\nimport MovieCard from '../components/MovieCard';\r\nimport { getLoading, getMovieById } from '../redux/movie-selectors';\r\nconst CastView = lazy(() =>\r\n  import('./CastView' /* webpackChunkName: \"cast-view\" */),\r\n);\r\nconst ReviewsView = lazy(() =>\r\n  import('./ReviewsView' /* webpackChunkName: \"reviews-view\" */),\r\n);\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    padding: 30,\r\n    minHeight: '100vh',\r\n  },\r\n  links: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    color: 'white',\r\n  },\r\n  link: {\r\n    color: 'white',\r\n    marginRight: 10,\r\n    '&:hover': {\r\n      color: 'red',\r\n    },\r\n  },\r\n  activeLink: {\r\n    color: 'red',\r\n  },\r\n  btns: {\r\n    width: 150,\r\n\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    marginTop: 20,\r\n  },\r\n  btn: {\r\n    width: 150,\r\n  },\r\n});\r\n\r\nexport default function MovieDetailsPage() {\r\n  const classes = useStyles();\r\n  const { movieId } = useParams();\r\n  const { url, path } = useRouteMatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const movie = useSelector(getMovieById);\r\n  const isLoading = useSelector(getLoading);\r\n  function scrollToBottom() {\r\n    scroll.scrollToBottom();\r\n  }\r\n  function scrollToTop() {\r\n    scroll.scrollToTop();\r\n  }\r\n  function onBtnClick() {\r\n    history.push(location?.state?.from ?? '/');\r\n  }\r\n  useEffect(() => {\r\n    dispatch(fetchMovieById(movieId));\r\n    return () => {\r\n      dispatch(fetchMovieByIdSuccess(null));\r\n    };\r\n  }, [movieId, dispatch]);\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.btn}>\r\n        <Button onClick={onBtnClick} type=\"button\">\r\n          Go back\r\n        </Button>\r\n      </div>\r\n\r\n      {isLoading && (\r\n        <Loader type=\"Oval\" color=\"#00BFFF\" height={100} width={100} />\r\n      )}\r\n\r\n      {movie?.title && (\r\n        <>\r\n          <MovieCard movie={movie} />\r\n          <h3>Additional information:</h3>\r\n          <div className={classes.links}>\r\n            <NavLink\r\n              to={{\r\n                pathname: `${url}/cast`,\r\n                state: { from: location?.state?.from },\r\n              }}\r\n              onClick={scrollToBottom}\r\n              className={classes.link}\r\n              activeClassName={classes.activeLink}\r\n            >\r\n              Cast\r\n            </NavLink>\r\n            <br />\r\n            <NavLink\r\n              to={{\r\n                pathname: `${url}/reviews`,\r\n                state: { from: location?.state?.from },\r\n              }}\r\n              onClick={scrollToBottom}\r\n              className={classes.link}\r\n              activeClassName={classes.activeLink}\r\n            >\r\n              Reviews\r\n            </NavLink>\r\n          </div>\r\n\r\n          <Suspense\r\n            fallback={\r\n              <Loader type=\"Oval\" color=\"#00BFFF\" height={100} width={100} />\r\n            }\r\n          >\r\n            <Switch>\r\n              <Route path={`${path}/cast`}>\r\n                <CastView />\r\n              </Route>\r\n              <Route path={`${path}/reviews`}>\r\n                <ReviewsView />\r\n              </Route>\r\n            </Switch>\r\n          </Suspense>\r\n        </>\r\n      )}\r\n      {movie?.success === false && <h1>Sorry, movie not found</h1>}\r\n      {movie?.title && (\r\n        <div className={classes.btns}>\r\n          <Button onClick={scrollToTop} type=\"button\">\r\n            To top\r\n          </Button>\r\n          <Button onClick={onBtnClick} type=\"button\">\r\n            Go back\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export const getLoading = state => state.loading;\r\nexport const getActors = state => state.movieCastById;\r\nexport const getPopularMovies = state => state.popularMovies;\r\nexport const getMovieById = state => state.movieById;\r\nexport const getMovieReviewsById = state => state.movieReviewsById;\r\nexport const getSearchValue = state => state.searchValue;\r\nexport const getNotFoundState = state => state.notFound;\r\n","const API_KEY = '73305cb339434d37e6117f3ddb0a9c1f';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nconst fetchPopularMovies = () => {\r\n  return fetch(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`).then(r =>\r\n    r.json(),\r\n  );\r\n};\r\n\r\nexport const fetchMovieById = movieId => {\r\n  return fetch(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\r\n  ).then(r => r.json());\r\n};\r\n\r\nconst fetchMovieByName = movieName => {\r\n  return fetch(\r\n    `${BASE_URL}/search/movie?query=${movieName}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`,\r\n  ).then(r => r.json());\r\n};\r\n\r\nconst fetchMovieCastById = movieId => {\r\n  return fetch(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\r\n  ).then(r => r.json());\r\n};\r\n\r\nconst fetchMovieReviewsById = movieId => {\r\n  return fetch(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\r\n  ).then(r => r.json());\r\n};\r\n\r\nconst API = {\r\n  fetchPopularMovies,\r\n  fetchMovieById,\r\n  fetchMovieByName,\r\n  fetchMovieCastById,\r\n  fetchMovieReviewsById,\r\n};\r\n\r\nexport default API;\r\n","import {\r\n  fetchPopularMoviesRequest,\r\n  fetchPopularMoviesSuccess,\r\n  fetchPopularMoviesError,\r\n  fetchMovieByIdRequest,\r\n  fetchMovieByIdSuccess,\r\n  fetchMovieByIdError,\r\n  fetchMovieByNameRequest,\r\n  fetchMovieByNameSuccess,\r\n  fetchMovieByNameError,\r\n  fetchMovieCastByIdRequest,\r\n  fetchMovieCastByIdSuccess,\r\n  fetchMovieCastByIdError,\r\n  fetchMovieReviewsByIdRequest,\r\n  fetchMovieReviewsByIdSuccess,\r\n  fetchMovieReviewsByIdError,\r\n  notFoundPageAction,\r\n} from './movie-actions';\r\nimport API from '../servises/api';\r\n\r\nexport const fetchPopularMovies = () => async dispatch => {\r\n  dispatch(fetchPopularMoviesRequest());\r\n  try {\r\n    const data = await API.fetchPopularMovies();\r\n    dispatch(fetchPopularMoviesSuccess(data.results));\r\n  } catch (error) {\r\n    dispatch(fetchPopularMoviesError(error));\r\n  }\r\n};\r\n\r\nexport const fetchMovieById = movieId => async dispatch => {\r\n  dispatch(fetchMovieByIdRequest());\r\n  try {\r\n    const data = await API.fetchMovieById(movieId);\r\n    dispatch(fetchMovieByIdSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchMovieByIdError(error));\r\n  }\r\n};\r\n\r\nexport const fetchMovieByName = movieName => async dispatch => {\r\n  dispatch(fetchMovieByNameRequest());\r\n  try {\r\n    API.fetchMovieByName(movieName).then(({ results }) => {\r\n      if (results.length === 0) {\r\n        return (\r\n          dispatch(notFoundPageAction(true)) &\r\n          dispatch(fetchMovieByNameSuccess([]))\r\n        );\r\n      }\r\n      return (\r\n        dispatch(fetchMovieByNameSuccess(results)) &\r\n        dispatch(notFoundPageAction(false))\r\n      );\r\n    });\r\n  } catch (error) {\r\n    dispatch(fetchMovieByNameError(error));\r\n  }\r\n};\r\n\r\nexport const fetchMovieCastById = movieId => async dispatch => {\r\n  dispatch(fetchMovieCastByIdRequest());\r\n  try {\r\n    API.fetchMovieCastById(movieId).then(({ cast }) =>\r\n      dispatch(fetchMovieCastByIdSuccess(cast)),\r\n    );\r\n  } catch (error) {\r\n    dispatch(fetchMovieCastByIdError(error));\r\n  }\r\n};\r\n\r\nexport const fetchMovieReviewsById = movieId => async dispatch => {\r\n  dispatch(fetchMovieReviewsByIdRequest());\r\n  try {\r\n    API.fetchMovieReviewsById(movieId).then(({ results }) =>\r\n      dispatch(fetchMovieReviewsByIdSuccess(results)),\r\n    );\r\n  } catch (error) {\r\n    dispatch(fetchMovieReviewsByIdError(error));\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/defaultPosterImg.4d87970c.jpg\";","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  btn: {\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n    borderColor: 'black',\r\n    borderRadius: 5,\r\n    minWidth: 70,\r\n    height: 23,\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    '&:hover': {\r\n      color: 'white',\r\n      backgroundColor: '#252433',\r\n      borderColor: 'white',\r\n    },\r\n  },\r\n});\r\n\r\nexport default function Button({ type, onClick, children }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <button type={type} className={classes.btn} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  overlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n    zIndex: '1200',\r\n  },\r\n\r\n  content: {\r\n    maxWidth: 'calc(100vw - 48px)',\r\n    maxHeight: 'calc(100vh - 24px)',\r\n  },\r\n});\r\nexport default function Modal({ onClose, src, alt }) {\r\n  const classes = useStyles();\r\n  const handlebackdropClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.overlay} onClick={handlebackdropClick}>\r\n      <div className={classes.content}>\r\n        <img src={src} alt={alt} width=\"400px\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}