{"version":3,"sources":["components/Form.js","views/MoviesPageView.js","redux/movie-selectors.js","servises/api.js","redux/movie-operations.js","images/defaultPosterImg.jpg","components/Button.js","components/MoviePreview.js","components/MoviesList.js"],"names":["useStyles","createUseStyles","form","textAlign","input","backgroundColor","color","borderColor","borderRadius","marginRight","container","marginTop","Form","onSubmit","classes","useState","value","setValue","dispatch","useDispatch","className","e","preventDefault","trim","toast","error","getSearchValueAction","placeholder","onChange","target","type","Button","width","marginLeft","height","title","load","MoviesPage","history","useHistory","location","useLocation","movies","useSelector","state","moviesByName","searchValue","getSearchValue","notFound","getNotFoundState","isLoading","getLoading","serchValueByQqeryString","queryString","parse","search","query","console","log","useEffect","push","fetchMovieByName","notFoundPageAction","length","MoviesList","loading","getActors","movieCastById","getPopularMovies","popularMovies","getMovieById","movieById","getMovieReviewsById","movieReviewsById","API_KEY","BASE_URL","API","fetchPopularMovies","fetch","then","r","json","fetchMovieById","movieId","movieName","fetchMovieCastById","fetchMovieReviewsById","a","fetchPopularMoviesRequest","data","fetchPopularMoviesSuccess","results","fetchPopularMoviesError","fetchMovieByIdRequest","fetchMovieByIdSuccess","fetchMovieByIdError","fetchMovieByNameRequest","fetchMovieByNameSuccess","fetchMovieByNameError","fetchMovieCastByIdRequest","cast","fetchMovieCastByIdSuccess","fetchMovieCastByIdError","fetchMovieReviewsByIdRequest","fetchMovieReviewsByIdSuccess","fetchMovieReviewsByIdError","btn","minWidth","paddingLeft","paddingRight","onClick","children","card","position","overflow","transform","Overlay","top","left","display","justifyContent","alignItems","zIndex","overview","padding","MoviePreview","name","imageURL","modal","showModal","slicedOverview","slice","sliceOverview","onMouseEnter","onMouseLeave","src","defaultImage","alt","list","flexWrap","listStyle","map","id","poster_path","item","to","pathname","from"],"mappings":"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","file":"static/js/movies-view.37b80dcb.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { toast } from 'react-toastify';\r\nimport Button from './Button';\r\nimport { getSearchValueAction } from '../redux/movie-actions';\r\n\r\nconst useStyles = createUseStyles({\r\n  form: {\r\n    textAlign: 'center',\r\n  },\r\n  input: {\r\n    backgroundColor: '#252433',\r\n    color: 'white',\r\n    borderColor: 'white',\r\n    borderRadius: 5,\r\n    marginRight: 10,\r\n  },\r\n  container: {\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n  },\r\n});\r\n\r\nexport default function Form({ onSubmit }) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState('');\r\n  const dispatch = useDispatch();\r\n  const handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    if (value.trim() === '') {\r\n      toast.error('Please enter correct title for the movie');\r\n    }\r\n    dispatch(getSearchValueAction(value));\r\n    setValue('');\r\n  };\r\n  return (\r\n    <div className={classes.container}>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <input\r\n          placeholder=\"spider-man\"\r\n          className={classes.input}\r\n          onChange={e => {\r\n            setValue(e.target.value);\r\n          }}\r\n          value={value}\r\n          type=\"text\"\r\n        />\r\n        <Button type=\"submit\">search</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable */\r\nimport { useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport queryString from 'query-string';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { fetchMovieByName } from '../redux/movie-operations';\r\nimport { notFoundPageAction } from '../redux/movie-actions';\r\nimport {\r\n  getLoading,\r\n  getSearchValue,\r\n  getNotFoundState,\r\n} from '../redux/movie-selectors';\r\nimport Form from '../components/Form';\r\nimport MoviesList from '../components/MoviesList';\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    width: 1200,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    height: '100vh',\r\n  },\r\n  title: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n  },\r\n  load: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nconst MoviesPage = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const movies = useSelector(state => state.moviesByName);\r\n  const searchValue = useSelector(getSearchValue);\r\n  const notFound = useSelector(getNotFoundState);\r\n  const isLoading = useSelector(getLoading);\r\n  const serchValueByQqeryString =\r\n    queryString.parse(location.search).query ?? '';\r\n  console.log(serchValueByQqeryString);\r\n\r\n  useEffect(() => {\r\n    if (searchValue.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    history.push({\r\n      ...location,\r\n      search: `query=${searchValue}`,\r\n    });\r\n  }, [searchValue]);\r\n\r\n  useEffect(() => {\r\n    if (serchValueByQqeryString === '') {\r\n      return;\r\n    }\r\n    dispatch(fetchMovieByName(serchValueByQqeryString));\r\n    return () => dispatch(notFoundPageAction(false));\r\n  }, [dispatch, serchValueByQqeryString]);\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Form />\r\n      {isLoading && (\r\n        <Loader\r\n          type=\"Oval\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          className={classes.load}\r\n        />\r\n      )}\r\n      {notFound && (\r\n        <h2 className={classes.title}>Sorry, not found. Try again.</h2>\r\n      )}\r\n      {movies?.length > 0 ? (\r\n        <MoviesList movies={movies} />\r\n      ) : (\r\n        <h2 className={classes.title}>Let's find your movie...</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n","export const getLoading = state => state.loading;\r\nexport const getActors = state => state.movieCastById;\r\nexport const getPopularMovies = state => state.popularMovies;\r\nexport const getMovieById = state => state.movieById;\r\nexport const getMovieReviewsById = state => state.movieReviewsById;\r\nexport const getSearchValue = state => state.searchValue;\r\nexport const getNotFoundState = state => state.notFound;\r\n","const API_KEY = '73305cb339434d37e6117f3ddb0a9c1f';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nconst fetchPopularMovies = () => {\r\n  return fetch(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`).then(r =>\r\n    r.json(),\r\n  );\r\n};\r\n\r\nexport const fetchMovieById = movieId => {\r\n  return fetch(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\r\n  ).then(r => r.json());\r\n};\r\n\r\nconst fetchMovieByName = movieName => {\r\n  return fetch(\r\n    `${BASE_URL}/search/movie?query=${movieName}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`,\r\n  ).then(r => r.json());\r\n};\r\n\r\nconst fetchMovieCastById = movieId => {\r\n  return fetch(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\r\n  ).then(r => r.json());\r\n};\r\n\r\nconst fetchMovieReviewsById = movieId => {\r\n  return fetch(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\r\n  ).then(r => r.json());\r\n};\r\n\r\nconst API = {\r\n  fetchPopularMovies,\r\n  fetchMovieById,\r\n  fetchMovieByName,\r\n  fetchMovieCastById,\r\n  fetchMovieReviewsById,\r\n};\r\n\r\nexport default API;\r\n","import {\r\n  fetchPopularMoviesRequest,\r\n  fetchPopularMoviesSuccess,\r\n  fetchPopularMoviesError,\r\n  fetchMovieByIdRequest,\r\n  fetchMovieByIdSuccess,\r\n  fetchMovieByIdError,\r\n  fetchMovieByNameRequest,\r\n  fetchMovieByNameSuccess,\r\n  fetchMovieByNameError,\r\n  fetchMovieCastByIdRequest,\r\n  fetchMovieCastByIdSuccess,\r\n  fetchMovieCastByIdError,\r\n  fetchMovieReviewsByIdRequest,\r\n  fetchMovieReviewsByIdSuccess,\r\n  fetchMovieReviewsByIdError,\r\n  notFoundPageAction,\r\n} from './movie-actions';\r\nimport API from '../servises/api';\r\n\r\nexport const fetchPopularMovies = () => async dispatch => {\r\n  dispatch(fetchPopularMoviesRequest());\r\n  try {\r\n    const data = await API.fetchPopularMovies();\r\n    dispatch(fetchPopularMoviesSuccess(data.results));\r\n  } catch (error) {\r\n    dispatch(fetchPopularMoviesError(error));\r\n  }\r\n};\r\n\r\nexport const fetchMovieById = movieId => async dispatch => {\r\n  dispatch(fetchMovieByIdRequest());\r\n  try {\r\n    const data = await API.fetchMovieById(movieId);\r\n    dispatch(fetchMovieByIdSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchMovieByIdError(error));\r\n  }\r\n};\r\n\r\nexport const fetchMovieByName = movieName => async dispatch => {\r\n  dispatch(fetchMovieByNameRequest());\r\n  try {\r\n    API.fetchMovieByName(movieName).then(({ results }) => {\r\n      if (results.length === 0) {\r\n        return (\r\n          dispatch(notFoundPageAction(true)) &\r\n          dispatch(fetchMovieByNameSuccess([]))\r\n        );\r\n      }\r\n      return (\r\n        dispatch(fetchMovieByNameSuccess(results)) &\r\n        dispatch(notFoundPageAction(false))\r\n      );\r\n    });\r\n  } catch (error) {\r\n    dispatch(fetchMovieByNameError(error));\r\n  }\r\n};\r\n\r\nexport const fetchMovieCastById = movieId => async dispatch => {\r\n  dispatch(fetchMovieCastByIdRequest());\r\n  try {\r\n    API.fetchMovieCastById(movieId).then(({ cast }) =>\r\n      dispatch(fetchMovieCastByIdSuccess(cast)),\r\n    );\r\n  } catch (error) {\r\n    dispatch(fetchMovieCastByIdError(error));\r\n  }\r\n};\r\n\r\nexport const fetchMovieReviewsById = movieId => async dispatch => {\r\n  dispatch(fetchMovieReviewsByIdRequest());\r\n  try {\r\n    API.fetchMovieReviewsById(movieId).then(({ results }) =>\r\n      dispatch(fetchMovieReviewsByIdSuccess(results)),\r\n    );\r\n  } catch (error) {\r\n    dispatch(fetchMovieReviewsByIdError(error));\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/defaultPosterImg.4d87970c.jpg\";","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  btn: {\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n    borderColor: 'black',\r\n    borderRadius: 5,\r\n    minWidth: 70,\r\n    height: 23,\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    '&:hover': {\r\n      color: 'white',\r\n      backgroundColor: '#252433',\r\n      borderColor: 'white',\r\n    },\r\n  },\r\n});\r\n\r\nexport default function Button({ type, onClick, children }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <button type={type} className={classes.btn} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport defaultImage from '../images/defaultPosterImg.jpg';\r\n\r\nconst useStyles = createUseStyles({\r\n  card: {\r\n    position: 'relative',\r\n    width: 220,\r\n    marginRight: 20,\r\n    marginTop: 20,\r\n    borderRadius: 10,\r\n    overflow: 'hidden',\r\n    '&:hover': {\r\n      transform: 'scale(1.1)',\r\n    },\r\n  },\r\n  Overlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n    zIndex: 1200,\r\n  },\r\n  title: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n  },\r\n  overview: {\r\n    color: 'white',\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default function MoviePreview({ title, name, imageURL, overview }) {\r\n  const [modal, showModal] = useState(false);\r\n  const classes = useStyles();\r\n  const sliceOverview = overview => {\r\n    const maxLength = 250;\r\n    if (overview.length > maxLength) {\r\n      return `${overview.slice(0, maxLength)}...`;\r\n    }\r\n    return overview;\r\n  };\r\n  const slicedOverview = sliceOverview(overview);\r\n  return (\r\n    <div\r\n      className={classes.card}\r\n      onMouseEnter={() => showModal(true)}\r\n      onMouseLeave={() => showModal(false)}\r\n    >\r\n      <img\r\n        src={\r\n          imageURL ? `https://image.tmdb.org/t/p/w400${imageURL}` : defaultImage\r\n        }\r\n        alt={title ?? name}\r\n        width=\"250px\"\r\n      />\r\n      {modal && (\r\n        <div className={classes.Overlay}>\r\n          <div>\r\n            <h3 className={classes.title}>{title ?? name}</h3>\r\n\r\n            <p className={classes.overview}>{slicedOverview}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Link, useLocation } from 'react-router-dom';\r\nimport { createUseStyles } from 'react-jss';\r\nimport MoviePreview from './MoviePreview';\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    padding: 0,\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    listStyle: 'none',\r\n  },\r\n});\r\nexport default function MoviesList({ movies }) {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <ul className={classes.list}>\r\n      {movies.map(({ id, title, name, poster_path, overview }) => (\r\n        <li key={id} className={classes.item}>\r\n          <Link\r\n            to={{\r\n              pathname: `/movies/${id}`,\r\n              state: { from: location },\r\n            }}\r\n          >\r\n            <MoviePreview\r\n              title={title}\r\n              name={name}\r\n              imageURL={poster_path}\r\n              overview={overview}\r\n            />\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n"],"sourceRoot":""}