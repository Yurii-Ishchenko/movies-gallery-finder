{"version":3,"sources":["components/review/FullReviewContent.js","components/review/SlicedReviewContent.js","components/review/ReviewsCard.js","views/ReviewsView.js"],"names":["FullReview","content","onClose","Button","onClick","type","SlicedContent","onOpen","showMoreContent","length","slice","useStyles","createUseStyles","container","backgroundColor","border","padding","title","marginTop","Reviewscard","author","useState","setShowMoreContent","toggleShowMoreContent","classes","className","list","listStyle","width","marginLeft","marginRight","item","marginBottom","Reviews","movieId","useParams","reviews","useSelector","getMovieReviewsById","isLoading","getLoading","dispatch","useDispatch","useEffect","fetchMovieReviewsById","fetchMovieReviewsByIdSuccess","color","height","map","id"],"mappings":"+PAEe,SAASA,EAAT,GAA2C,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAC5C,OACE,qCACE,4BAAID,IACJ,cAACE,EAAA,EAAD,CAAQC,QAASF,EAASG,KAAK,SAA/B,sBCJS,SAASC,EAAT,GAA8D,IAArCL,EAAoC,EAApCA,QAASM,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,gBAEvD,OAAIP,EAAQQ,OADM,IAGd,qCACE,sCAAOR,EAAQS,MAAM,EAJT,KAIZ,SACA,cAACP,EAAA,EAAD,CAAQE,KAAK,SAASD,QAASG,EAA/B,SACGC,EAAkB,QAAU,iBAK9B,4BAAIP,ICTb,IAAMU,EAAYC,YAAgB,CAChCC,UAAW,CACTC,gBAAiB,QACjBC,OAAQ,kBACRC,QAAS,IAEXC,MAAO,CACLC,UAAW,KAIA,SAASC,EAAT,GAA2C,IAApBC,EAAmB,EAAnBA,OAAQnB,EAAW,EAAXA,QAC5C,EAA8CoB,oBAAS,GAAvD,mBAAOb,EAAP,KAAwBc,EAAxB,KACMC,EAAwB,WAC5B,OAAOD,GAAoBd,IAEvBgB,EAAUb,IAEhB,OACE,sBAAKc,UAAWD,EAAQX,UAAxB,UACE,oBAAIY,UAAWD,EAAQP,MAAvB,qBACA,4BAAIG,IAEHZ,EACC,cAACR,EAAD,CAAmBC,QAASA,EAASC,QAASqB,IAE9C,cAAC,EAAD,CACEtB,QAASA,EACTM,OAAQgB,EACRf,gBAAiBA,O,4BCxBrBG,EAAYC,YAAgB,CAChCc,KAAM,CACJC,UAAW,OACXX,QAAS,EACTY,MAAO,IACPC,WAAY,OACZC,YAAa,QAEfC,KAAM,CACJC,aAAc,MAIH,SAASC,IACtB,IAAMT,EAAUb,IACRuB,EAAYC,cAAZD,QACFE,EAAUC,YAAYC,KACtBC,EAAYF,YAAYG,KACxBC,EAAWC,cAMjB,OALAC,qBAAU,WAER,OADAF,EAASG,YAAsBV,IACxB,kBAAMO,EAASI,YAA6B,QAClD,CAACX,EAASO,IAETF,EACK,cAAC,IAAD,CAAQlC,KAAK,OAAOyC,MAAM,UAAUC,OAAQ,IAAKnB,MAAO,OAEtD,OAAPQ,QAAO,IAAPA,OAAA,EAAAA,EAAS3B,QAAS,EAElB,oBAAIgB,UAAWD,EAAQE,KAAvB,SACGU,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAI7B,EAAP,EAAOA,OAAQnB,EAAf,EAAeA,QAAf,OACX,oBAAawB,UAAWD,EAAQO,KAAhC,SACE,cAAC,EAAD,CAAaX,OAAQA,EAAQnB,QAASA,KAD/BgD,QAOV","file":"static/js/reviews-view.44f30621.chunk.js","sourcesContent":["import Button from '../Button';\r\n\r\nexport default function FullReview({ content, onClose }) {\r\n  return (\r\n    <>\r\n      <p>{content}</p>\r\n      <Button onClick={onClose} type=\"button\">\r\n        Close\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","import Button from '../Button';\r\n\r\nexport default function SlicedContent({ content, onOpen, showMoreContent }) {\r\n  const maxLength = 800;\r\n  if (content.length > maxLength) {\r\n    return (\r\n      <>\r\n        <p>{`${content.slice(0, maxLength)}...`}</p>\r\n        <Button type=\"button\" onClick={onOpen}>\r\n          {showMoreContent ? 'Close' : 'Read more'}\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n  return <p>{content}</p>;\r\n}\r\n","import { useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport FullReviewContent from './FullReviewContent';\r\nimport SlicedReviewContent from './SlicedReviewContent';\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    backgroundColor: 'black',\r\n    border: '2px solid white',\r\n    padding: 15,\r\n  },\r\n  title: {\r\n    marginTop: 0,\r\n  },\r\n});\r\n\r\nexport default function Reviewscard({ author, content }) {\r\n  const [showMoreContent, setShowMoreContent] = useState(false);\r\n  const toggleShowMoreContent = () => {\r\n    return setShowMoreContent(!showMoreContent);\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <h3 className={classes.title}>author:</h3>\r\n      <p>{author}</p>\r\n\r\n      {showMoreContent ? (\r\n        <FullReviewContent content={content} onClose={toggleShowMoreContent} />\r\n      ) : (\r\n        <SlicedReviewContent\r\n          content={content}\r\n          onOpen={toggleShowMoreContent}\r\n          showMoreContent={showMoreContent}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\nimport { createUseStyles } from 'react-jss';\r\nimport ReviewsCard from '../components/review/ReviewsCard';\r\nimport { fetchMovieReviewsById } from '../redux/movie-operations';\r\nimport { fetchMovieReviewsByIdSuccess } from '../redux/movie-actions';\r\nimport { getLoading, getMovieReviewsById } from '../redux/movie-selectors';\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    listStyle: 'none',\r\n    padding: 0,\r\n    width: 1000,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  item: {\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nexport default function Reviews() {\r\n  const classes = useStyles();\r\n  const { movieId } = useParams();\r\n  const reviews = useSelector(getMovieReviewsById);\r\n  const isLoading = useSelector(getLoading);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchMovieReviewsById(movieId));\r\n    return () => dispatch(fetchMovieReviewsByIdSuccess([]));\r\n  }, [movieId, dispatch]);\r\n\r\n  if (isLoading) {\r\n    return <Loader type=\"Oval\" color=\"#00BFFF\" height={100} width={100} />;\r\n  }\r\n  if (reviews?.length > 0) {\r\n    return (\r\n      <ul className={classes.list}>\r\n        {reviews.map(({ id, author, content }) => (\r\n          <li key={id} className={classes.item}>\r\n            <ReviewsCard author={author} content={content} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n  return <p>Sorry, not found any reviews for this movie</p>;\r\n}\r\n"],"sourceRoot":""}